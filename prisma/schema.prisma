// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}


// schema.prisma


model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  password String
  imageUrl String @db.Text
  email String @db.Text
  salt String? @db.Text
  otp String @db.Text
  isVerified Boolean 
  otpExpiresAt DateTime @default(now())
  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Board {
  id          String    @id @default(uuid())
  title       String
  description String?
  color       String
  user_id     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  columns     Column[]

  @@map("boards") // Matches Supabase table name
}

model Column {
  id          String     @id @default(uuid())
  board_id    String
  title       String
  sort_order  Int
  created_at  DateTime   @default(now())
  user_id     String

  board       Board      @relation(fields: [board_id], references: [id], onDelete: Cascade)
  tasks       Task[]

  @@map("columns")
}

model Task {
  id          String    @id @default(uuid())
  column_id   String
  title       String
  description String?
  assignee    String?
  due_date    DateTime?
  priority    Priority
  sort_order  Int
  created_at  DateTime  @default(now())

  column      Column    @relation(fields: [column_id], references: [id], onDelete: Cascade)

  @@map("tasks")
}

enum Priority {
  low
  medium
  high
}